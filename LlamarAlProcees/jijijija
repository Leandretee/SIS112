int[] arr = {1, 2, 3, 8};
List<int[]> permutations = new List<int[]>()
permutations = GeneratePermutations(arr, 0, arr.Lenght -1, permutations);

foreach (int[] permutation in permutations)
{
    Console.WriteLine(string.Join(", ", permutation));
}

static List<int[]> GeneratePermutations(int[] arr, int l, int r, List<int[]> permutationsList)
{
    if (l == r)
    {
        int[] permutation = new int[arr.Length];
        Array.Copy(arr, 0, permutation, 0, arr.Length);
        permutationsList.Add(permutation);
        return permutationsList;
    }
    for (int i = l; i <= r; i++)
    {
        Swap(arr, l, i);
        permutationsList = GeneratePermutations(arr, l + 1, r, permutationsList);
        Swap(arr, l, i);
    } 
    return permutationsList;
}
static void Swap(int[], arr, int i, int j)
{
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
}